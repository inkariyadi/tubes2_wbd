{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/inkariyadi/Documents/GitHub/willy-wangky-factory/src/login.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { Redirect } from \"react-router-dom\";\nimport TextField from '@material-ui/core/TextField';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport Button from '@material-ui/core/Button'; // import 'fontsource-roboto';\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    '& .MuiTextField-root': {\n      margin: theme.spacing(1),\n      width: '25ch'\n    }\n  }\n}));\nexport default function Login() {\n  _s();\n\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [redirectToReferer, setredirectToReferer] = useState(\"\");\n  const classes = useStyles();\n  var emailArray = [\"chacha@gmail.com\", \"inka@gmail.com\", \"jundu@gmail.com\", \"admin@gmail.com\"];\n  var pwArray = [\"12345\", \"inkink\", \"12345\", \"admin123\"];\n  let login = false;\n\n  function validateForm() {\n    return email.length > 0 && password.length > 0;\n  }\n\n  function handleSubmit() {\n    console.log(email, password); // event.preventDefault();\n\n    for (var i = 0; i < emailArray.length; i++) {\n      if (email == emailArray[i] && password == pwArray[i]) {\n        localStorage.setItem('email', email);\n        localStorage.setItem('pw', password);\n        setredirectToReferer(true);\n        login = true;\n      }\n    }\n\n    if (!login) {\n      alert(\"Wrong username or password\");\n    } // if(email==='chacha@gmail.com'  && password==='12345'){\n    //   // return <Redirect to=\"/home\" />;\n    //   localStorage.setItem('email', email);\n    //   localStorage.setItem('pw', password);\n    //   setredirectToReferer(true);\n    // }else{\n    //   alert(\"Wrong username or password\");\n    // }\n\n  }\n\n  if (redirectToReferer) {\n    return /*#__PURE__*/_jsxDEV(Redirect, {\n      to: \"/home\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 12\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    alignItems: \"center\",\n    children: /*#__PURE__*/_jsxDEV(Grid, {\n      container: true,\n      direction: \"column\",\n      justify: \"space-between\",\n      alignItems: \"center\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Login here\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 15\n      }, this), /*#__PURE__*/_jsxDEV(TextField, {\n        required: true,\n        id: \"outlined-required\",\n        label: \"Email\",\n        type: \"email\",\n        variant: \"outlined\",\n        value: email,\n        onChange: e => setEmail(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 15\n      }, this), /*#__PURE__*/_jsxDEV(TextField, {\n        required: true,\n        id: \"outlined-password-input\",\n        label: \"Password\",\n        type: \"password\",\n        variant: \"outlined\",\n        value: password,\n        onChange: e => setPassword(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 15\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"outlined\",\n        color: \"primary\",\n        onClick: handleSubmit,\n        children: \"Log In\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 15\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 61,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Login, \"ESA672L3GVpS8NYeBXeNZhlt754=\", false, function () {\n  return [useStyles];\n});\n\n_c = Login;\n\nvar _c;\n\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"sources":["/Users/inkariyadi/Documents/GitHub/willy-wangky-factory/src/login.js"],"names":["React","useState","Redirect","TextField","makeStyles","Grid","Button","useStyles","theme","root","margin","spacing","width","Login","email","setEmail","password","setPassword","redirectToReferer","setredirectToReferer","classes","emailArray","pwArray","login","validateForm","length","handleSubmit","console","log","i","localStorage","setItem","alert","e","target","value"],"mappings":"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","sourcesContent":["import React , { useState } from 'react';\nimport {Redirect } from \"react-router-dom\";\nimport TextField from '@material-ui/core/TextField';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport Button from '@material-ui/core/Button';\n// import 'fontsource-roboto';\n\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    '& .MuiTextField-root': {\n      margin: theme.spacing(1),\n      width: '25ch',\n    },\n  },\n}));\n\nexport default function Login() {\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [redirectToReferer, setredirectToReferer] = useState(\"\");\n  const classes = useStyles();\n  var emailArray = [\"chacha@gmail.com\", \"inka@gmail.com\", \"jundu@gmail.com\", \"admin@gmail.com\"];\n  var pwArray = [\"12345\", \"inkink\", \"12345\", \"admin123\"];\n  let login = false;\n\n  function validateForm() {\n    return email.length > 0 && password.length > 0;\n  }\n\n  function handleSubmit() {\n    console.log(email, password);\n    // event.preventDefault();\n    for (var i=0; i <emailArray.length; i++) {\n        if ((email == emailArray[i]) && (password == pwArray[i])) {\n          localStorage.setItem('email', email);\n          localStorage.setItem('pw', password);\n          setredirectToReferer(true);\n          login=true;\n        }\n    }\n    if(!login){\n        alert(\"Wrong username or password\");\n    }\n    // if(email==='chacha@gmail.com'  && password==='12345'){\n    //   // return <Redirect to=\"/home\" />;\n    //   localStorage.setItem('email', email);\n    //   localStorage.setItem('pw', password);\n    //   setredirectToReferer(true);\n    // }else{\n    //   alert(\"Wrong username or password\");\n    // }\n  }\n\n  if (redirectToReferer) {\n    return <Redirect to=\"/home\" />;\n  }\n  return (\n    \n    <div alignItems=\"center\">\n            <Grid\n                container\n                direction=\"column\"\n                justify=\"space-between\"\n                alignItems=\"center\"\n            >\n              <h1>Login here</h1>\n              <TextField\n                  required\n                  id=\"outlined-required\"\n                  label=\"Email\"\n                  type=\"email\"\n                  variant=\"outlined\"\n                  value={email}                \n                  onChange={(e) => setEmail(e.target.value)}\n              />\n              <TextField\n                  required\n                  id=\"outlined-password-input\"\n                  label=\"Password\"\n                  type=\"password\"\n                  variant=\"outlined\"\n                  value={password}\n                  onChange={(e) => setPassword(e.target.value)}\n              />\n              <Button variant=\"outlined\" color=\"primary\" onClick={handleSubmit}>\n                  Log In\n              </Button>\n            </Grid>\n    </div>\n  );\n}"]},"metadata":{},"sourceType":"module"}