{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/chandrikaazharyanti/Documents/GitHub/willy-wangky-factory/src/components/collapsibleTable.js\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport ListItem from '@material-ui/core/ListItem';\nimport Axios from 'axios';\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Box from \"@material-ui/core/Box\";\nimport Collapse from \"@material-ui/core/Collapse\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport Table from \"@material-ui/core/Table\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableContainer from \"@material-ui/core/TableContainer\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Paper from \"@material-ui/core/Paper\";\nimport KeyboardArrowDownIcon from \"@material-ui/icons/KeyboardArrowDown\";\nimport KeyboardArrowUpIcon from \"@material-ui/icons/KeyboardArrowUp\";\nconst useRowStyles = makeStyles({\n  root: {\n    \"& > *\": {\n      borderBottom: \"unset\"\n    }\n  }\n}); // function createData(name, stok) {\n//   return {\n//     name,\n//     stok,\n//     resep: [\n//       { bahan: \"Bubuk coklat\", amount: 10 },\n//       { bahan: \"Gula Merah\", amount: 4 },\n//       { bahan: \"Vanili\", amount: 6 },\n//       { bahan: \"pewarna\", amount: 1 }\n//     ]\n//   };\n// }\n\nfunction Row(props) {\n  _s();\n\n  const {\n    row\n  } = props;\n  const [open, setOpen] = React.useState(false);\n  const [resep, setResep] = useState([]);\n  const classes = useRowStyles();\n  let id = row.id_coklat;\n  let api = \"http://localhost:3006/api/resep/{id}\"; // let params = api.bind(id);\n\n  useEffect(() => {\n    Axios.get(params).then(response => {\n      // console.log(response.data);\n      setResep(response.data); //   rows = response.data;\n      //   console.log(rows);\n    });\n  }, []);\n  return /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(TableRow, {\n      className: classes.root,\n      children: [/*#__PURE__*/_jsxDEV(TableCell, {\n        children: /*#__PURE__*/_jsxDEV(IconButton, {\n          \"aria-label\": \"expand row\",\n          size: \"small\",\n          onClick: () => setOpen(!open),\n          children: open ? /*#__PURE__*/_jsxDEV(KeyboardArrowUpIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 21\n          }, this) : /*#__PURE__*/_jsxDEV(KeyboardArrowDownIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 47\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n        children: row.nama_coklat\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n        children: row.stok\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(TableRow, {\n      children: /*#__PURE__*/_jsxDEV(TableCell, {\n        style: {\n          paddingBottom: 0,\n          paddingTop: 0,\n          borderColor: \"black\"\n        },\n        colSpan: 6,\n        children: /*#__PURE__*/_jsxDEV(Collapse, {\n          in: open,\n          timeout: \"auto\",\n          unmountOnExit: true,\n          children: /*#__PURE__*/_jsxDEV(Box, {\n            margin: 5,\n            children: [/*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"h6\",\n              gutterBottom: true,\n              component: \"div\",\n              children: \"Resep\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 77,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Table, {\n              size: \"small\",\n              \"aria-label\": \"purchases\",\n              children: [/*#__PURE__*/_jsxDEV(TableHead, {\n                children: /*#__PURE__*/_jsxDEV(TableRow, {\n                  children: [/*#__PURE__*/_jsxDEV(TableCell, {\n                    children: \"Bahan\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 83,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                    children: \"Jumlah\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 84,\n                    columnNumber: 21\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 82,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 81,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(TableBody, {\n                children: resep.map(historyRow => /*#__PURE__*/_jsxDEV(TableRow, {\n                  children: [/*#__PURE__*/_jsxDEV(TableCell, {\n                    children: historyRow.nama_bahan\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 92,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                    children: historyRow.jumlah\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 95,\n                    columnNumber: 23\n                  }, this)]\n                }, historyRow.bahan, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 91,\n                  columnNumber: 21\n                }, this))\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 89,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 80,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 57,\n    columnNumber: 5\n  }, this);\n} // Row.propTypes = {\n//   row: PropTypes.shape({\n//     calories: PropTypes.number.isRequired,\n//     carbs: PropTypes.number.isRequired,\n//     fat: PropTypes.number.isRequired,\n//     history: PropTypes.arrayOf(\n//       PropTypes.shape({\n//         amount: PropTypes.number.isRequired,\n//         customerId: PropTypes.string.isRequired,\n//         date: PropTypes.string.isRequired,\n//       }),\n//     ).isRequired,\n//     name: PropTypes.string.isRequired,\n//     price: PropTypes.number.isRequired,\n//     protein: PropTypes.number.isRequired,\n//   }).isRequired,\n// };\n// const rows = [\n//   createData(\"Dark Chocolate\", 159),\n//   createData(\"Milk Chocolate\", 237),\n//   createData(\"chocoroco\", 262),\n//   createData(\"la vie en rose\", 305),\n//   createData(\"coki coki coklat asli\", 356),\n//   createData(\"bertabur mede gurih\", 10),\n//   createData(\"coklat ke sekian\", 39),\n//   createData(\"soes coklat\", 87),\n//   createData(\"coklat 3\", 100),\n//   createData(\"coklat enak\", 2)\n// ];\n\n\n_s(Row, \"2Yj4pHvKFCwHphhaqG0RHsto8w0=\", false, function () {\n  return [useRowStyles];\n});\n\n_c = Row;\nexport default function CollapsibleTable() {\n  _s2();\n\n  const [coklat, setcoklat] = useState([]);\n  useEffect(() => {\n    Axios.get(\"http://localhost:3006/api/coklatresep\").then(response => {\n      // console.log(response.data);\n      setcoklat(response.data); //   rows = response.data;\n      //   console.log(rows);\n    });\n  }, []);\n  return /*#__PURE__*/_jsxDEV(TableContainer, {\n    component: Paper,\n    style: {\n      backgroundColor: \"pink\"\n    },\n    children: /*#__PURE__*/_jsxDEV(Table, {\n      \"aria-label\": \"collapsible table\",\n      children: [/*#__PURE__*/_jsxDEV(TableHead, {\n        children: /*#__PURE__*/_jsxDEV(TableRow, {\n          children: [/*#__PURE__*/_jsxDEV(TableCell, {\n            style: {\n              borderColor: \"black\"\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 159,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n            style: {\n              borderColor: \"black\"\n            },\n            children: \"Nama Coklat\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 160,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n            style: {\n              borderColor: \"black\"\n            },\n            children: \"Jumlah Stok\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 161,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 158,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 157,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TableBody, {\n        children: coklat.map(row => /*#__PURE__*/_jsxDEV(Row, {\n          row: row\n        }, row.id_coklat, false, {\n          fileName: _jsxFileName,\n          lineNumber: 166,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 164,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 156,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 155,\n    columnNumber: 5\n  }, this);\n}\n\n_s2(CollapsibleTable, \"NckEBvjE2Mb5HF1WX4cyEpWXnXs=\");\n\n_c2 = CollapsibleTable;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"Row\");\n$RefreshReg$(_c2, \"CollapsibleTable\");","map":{"version":3,"sources":["/Users/chandrikaazharyanti/Documents/GitHub/willy-wangky-factory/src/components/collapsibleTable.js"],"names":["React","useState","useEffect","ListItem","Axios","makeStyles","Box","Collapse","IconButton","Table","TableBody","TableCell","TableContainer","TableHead","TableRow","Typography","Paper","KeyboardArrowDownIcon","KeyboardArrowUpIcon","useRowStyles","root","borderBottom","Row","props","row","open","setOpen","resep","setResep","classes","id","id_coklat","api","get","params","then","response","data","nama_coklat","stok","paddingBottom","paddingTop","borderColor","map","historyRow","nama_bahan","jumlah","bahan","CollapsibleTable","coklat","setcoklat","backgroundColor"],"mappings":"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","sourcesContent":["import React, {useState, useEffect} from \"react\";\nimport ListItem from '@material-ui/core/ListItem';\nimport Axios from 'axios';\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Box from \"@material-ui/core/Box\";\nimport Collapse from \"@material-ui/core/Collapse\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport Table from \"@material-ui/core/Table\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableContainer from \"@material-ui/core/TableContainer\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Paper from \"@material-ui/core/Paper\";\nimport KeyboardArrowDownIcon from \"@material-ui/icons/KeyboardArrowDown\";\nimport KeyboardArrowUpIcon from \"@material-ui/icons/KeyboardArrowUp\";\n\nconst useRowStyles = makeStyles({\n  root: {\n    \"& > *\": {\n      borderBottom: \"unset\"    }\n  }\n});\n\n// function createData(name, stok) {\n//   return {\n//     name,\n//     stok,\n//     resep: [\n//       { bahan: \"Bubuk coklat\", amount: 10 },\n//       { bahan: \"Gula Merah\", amount: 4 },\n//       { bahan: \"Vanili\", amount: 6 },\n//       { bahan: \"pewarna\", amount: 1 }\n//     ]\n//   };\n// }\n\nfunction Row(props) {\n  const { row } = props;\n  const [open, setOpen] = React.useState(false);\n  const [resep,setResep] = useState([]);\n  const classes = useRowStyles();\n  let id = row.id_coklat;\n  let api = \"http://localhost:3006/api/resep/{id}\"\n  // let params = api.bind(id);\n  useEffect(()=>{\n    Axios.get(params).then((response)=>{\n      // console.log(response.data);\n      setResep(response.data);\n    //   rows = response.data;\n    //   console.log(rows);\n    });\n  },[]);\n\n  return (\n    <React.Fragment>\n      <TableRow className={classes.root}>\n        <TableCell>\n          <IconButton\n            aria-label=\"expand row\"\n            size=\"small\"\n            onClick={() => setOpen(!open)}\n          >\n            {open ? <KeyboardArrowUpIcon /> : <KeyboardArrowDownIcon />}\n          </IconButton>\n        </TableCell>\n        <TableCell >\n          {row.nama_coklat}\n        </TableCell>\n        <TableCell>{row.stok}</TableCell>\n      </TableRow>\n      <TableRow>\n        <TableCell style={{ paddingBottom: 0, paddingTop: 0, borderColor:\"black\"}} colSpan={6}>\n          <Collapse in={open} timeout=\"auto\" unmountOnExit>\n            <Box margin={5}>\n              <Typography variant=\"h6\" gutterBottom component=\"div\">\n                Resep\n              </Typography>\n              <Table size=\"small\" aria-label=\"purchases\">\n                <TableHead>\n                  <TableRow>\n                    <TableCell>Bahan</TableCell>\n                    <TableCell>Jumlah</TableCell>\n                    {/* <TableCell align=\"right\">Amount</TableCell>\n                    <TableCell align=\"right\">Total price ($)</TableCell> */}\n                  </TableRow>\n                </TableHead>\n                <TableBody>\n                  {resep.map((historyRow) => (\n                    <TableRow key={historyRow.bahan}>\n                      <TableCell >\n                        {historyRow.nama_bahan}\n                      </TableCell>\n                      <TableCell>{historyRow.jumlah}</TableCell>\n                      {/* <TableCell align=\"right\">{historyRow.amount}</TableCell>\n                      <TableCell align=\"right\">\n                        {Math.round(historyRow.amount * row.price * 100) / 100}\n                      </TableCell> */}\n                    </TableRow>\n                  ))}\n                </TableBody>\n              </Table>\n            </Box>\n          </Collapse>\n        </TableCell>\n      </TableRow>\n    </React.Fragment>\n  );\n}\n\n// Row.propTypes = {\n//   row: PropTypes.shape({\n//     calories: PropTypes.number.isRequired,\n//     carbs: PropTypes.number.isRequired,\n//     fat: PropTypes.number.isRequired,\n//     history: PropTypes.arrayOf(\n//       PropTypes.shape({\n//         amount: PropTypes.number.isRequired,\n//         customerId: PropTypes.string.isRequired,\n//         date: PropTypes.string.isRequired,\n//       }),\n//     ).isRequired,\n//     name: PropTypes.string.isRequired,\n//     price: PropTypes.number.isRequired,\n//     protein: PropTypes.number.isRequired,\n//   }).isRequired,\n// };\n\n// const rows = [\n//   createData(\"Dark Chocolate\", 159),\n//   createData(\"Milk Chocolate\", 237),\n//   createData(\"chocoroco\", 262),\n//   createData(\"la vie en rose\", 305),\n//   createData(\"coki coki coklat asli\", 356),\n//   createData(\"bertabur mede gurih\", 10),\n//   createData(\"coklat ke sekian\", 39),\n//   createData(\"soes coklat\", 87),\n//   createData(\"coklat 3\", 100),\n//   createData(\"coklat enak\", 2)\n// ];\n\nexport default function CollapsibleTable() {\n  const [coklat,setcoklat] = useState([]);\n  useEffect(()=>{\n    Axios.get(\"http://localhost:3006/api/coklatresep\").then((response)=>{\n      // console.log(response.data);\n      setcoklat(response.data);\n    //   rows = response.data;\n    //   console.log(rows);\n    });\n  },[]);\n\n  return (\n    <TableContainer component={Paper} style={{backgroundColor:\"pink\"}}>\n      <Table aria-label=\"collapsible table\">\n        <TableHead>\n          <TableRow>\n            <TableCell style={{borderColor:\"black\"}}/>\n            <TableCell style={{borderColor:\"black\"}}>Nama Coklat</TableCell>\n            <TableCell style={{borderColor:\"black\"}}>Jumlah Stok</TableCell>\n          </TableRow>\n        </TableHead>\n        <TableBody>\n          {coklat.map((row) => (\n            <Row key={row.id_coklat} row={row} />\n          ))}\n        </TableBody>\n      </Table>\n    </TableContainer>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}