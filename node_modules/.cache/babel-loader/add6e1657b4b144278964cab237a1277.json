{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/chandrikaazharyanti/Documents/GitHub/willy-wangky-factory/src/components/collapsibleTable.js\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport ListItem from '@material-ui/core/ListItem';\nimport Axios from 'axios';\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Box from \"@material-ui/core/Box\";\nimport Collapse from \"@material-ui/core/Collapse\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport Table from \"@material-ui/core/Table\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableContainer from \"@material-ui/core/TableContainer\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Paper from \"@material-ui/core/Paper\";\nimport KeyboardArrowDownIcon from \"@material-ui/icons/KeyboardArrowDown\";\nimport KeyboardArrowUpIcon from \"@material-ui/icons/KeyboardArrowUp\";\nconst useRowStyles = makeStyles({\n  root: {\n    \"& > *\": {\n      borderBottom: \"unset\"\n    }\n  }\n});\n\nfunction Row(props) {\n  _s();\n\n  const {\n    row\n  } = props;\n  const [open, setOpen] = React.useState(false);\n  const [resep, setResep] = useState([]);\n  const classes = useRowStyles();\n  let id = row.id_coklat; // console.log(id);\n\n  let api = \"http://localhost:3007/api/resep/\"; // console.log(api);\n\n  let newapi = api.concat(id); // let params = api.bind(id);\n\n  useEffect(() => {\n    Axios.get(newapi).then(response => {\n      // console.log(response.data);\n      setResep(response.data); //   rows = response.data;\n      //   console.log(rows);\n    });\n  }, []);\n  return /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(TableRow, {\n      className: classes.root,\n      children: [/*#__PURE__*/_jsxDEV(TableCell, {\n        children: row.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n        children: row.stok\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n        align: \"right\",\n        children: /*#__PURE__*/_jsxDEV(IconButton, {\n          \"aria-label\": \"expand row\",\n          size: \"small\",\n          onClick: () => setOpen(!open),\n          children: open ? /*#__PURE__*/_jsxDEV(KeyboardArrowUpIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 21\n          }, this) : /*#__PURE__*/_jsxDEV(KeyboardArrowDownIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 47\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n        children: row.nama_coklat\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n        children: row.stok\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(TableRow, {\n      children: /*#__PURE__*/_jsxDEV(TableCell, {\n        style: {\n          paddingBottom: 0,\n          paddingTop: 0,\n          borderColor: \"black\"\n        },\n        colSpan: 6,\n        children: /*#__PURE__*/_jsxDEV(Collapse, {\n          in: open,\n          timeout: \"auto\",\n          unmountOnExit: true,\n          children: /*#__PURE__*/_jsxDEV(Box, {\n            margin: 5,\n            children: [/*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"h6\",\n              gutterBottom: true,\n              component: \"div\",\n              children: \"Resep\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 75,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Table, {\n              size: \"small\",\n              \"aria-label\": \"purchases\",\n              children: [/*#__PURE__*/_jsxDEV(TableHead, {\n                children: /*#__PURE__*/_jsxDEV(TableRow, {\n                  children: [/*#__PURE__*/_jsxDEV(TableCell, {\n                    children: \"Bahan\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 81,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                    children: \"Jumlah\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 82,\n                    columnNumber: 21\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 80,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 79,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(TableBody, {\n                children: resep.map(historyRow => /*#__PURE__*/_jsxDEV(TableRow, {\n                  children: [/*#__PURE__*/_jsxDEV(TableCell, {\n                    children: historyRow.nama_bahan\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 90,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                    children: historyRow.jumlah\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 93,\n                    columnNumber: 23\n                  }, this)]\n                }, historyRow.bahan, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 89,\n                  columnNumber: 21\n                }, this))\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 87,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 78,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 74,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Row, \"2Yj4pHvKFCwHphhaqG0RHsto8w0=\", false, function () {\n  return [useRowStyles];\n});\n\n_c = Row;\nexport default function CollapsibleTable() {\n  _s2();\n\n  const [coklat, setcoklat] = useState([]);\n  useEffect(() => {\n    Axios.get(\"http://localhost:3007/api/coklatresep\").then(response => {\n      // console.log(response.data);\n      setcoklat(response.data); //   rows = response.data;\n      //   console.log(rows);\n    });\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Daftar Coklat & Resep\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(TableContainer, {\n      component: Paper,\n      style: {\n        backgroundColor: \"pink\"\n      },\n      children: /*#__PURE__*/_jsxDEV(Table, {\n        \"aria-label\": \"collapsible table\",\n        children: [/*#__PURE__*/_jsxDEV(TableHead, {\n          children: /*#__PURE__*/_jsxDEV(TableRow, {\n            children: [/*#__PURE__*/_jsxDEV(TableCell, {\n              style: {\n                borderColor: \"black\"\n              },\n              children: \"Nama Coklat\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 128,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              style: {\n                borderColor: \"black\"\n              },\n              children: \"Jumlah Stok\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 129,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              style: {\n                borderColor: \"black\"\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 130,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 127,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 126,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(TableBody, {\n          children: coklat.map(row => /*#__PURE__*/_jsxDEV(Row, {\n            row: row\n          }, row.id_coklat, false, {\n            fileName: _jsxFileName,\n            lineNumber: 139,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 137,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 122,\n    columnNumber: 5\n  }, this);\n}\n\n_s2(CollapsibleTable, \"NckEBvjE2Mb5HF1WX4cyEpWXnXs=\");\n\n_c2 = CollapsibleTable;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"Row\");\n$RefreshReg$(_c2, \"CollapsibleTable\");","map":{"version":3,"sources":["/Users/chandrikaazharyanti/Documents/GitHub/willy-wangky-factory/src/components/collapsibleTable.js"],"names":["React","useState","useEffect","ListItem","Axios","makeStyles","Box","Collapse","IconButton","Table","TableBody","TableCell","TableContainer","TableHead","TableRow","Typography","Paper","KeyboardArrowDownIcon","KeyboardArrowUpIcon","useRowStyles","root","borderBottom","Row","props","row","open","setOpen","resep","setResep","classes","id","id_coklat","api","newapi","concat","get","then","response","data","name","stok","nama_coklat","paddingBottom","paddingTop","borderColor","map","historyRow","nama_bahan","jumlah","bahan","CollapsibleTable","coklat","setcoklat","backgroundColor"],"mappings":"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","sourcesContent":["import React, {useState, useEffect} from \"react\";\nimport ListItem from '@material-ui/core/ListItem';\nimport Axios from 'axios';\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Box from \"@material-ui/core/Box\";\nimport Collapse from \"@material-ui/core/Collapse\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport Table from \"@material-ui/core/Table\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableContainer from \"@material-ui/core/TableContainer\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Paper from \"@material-ui/core/Paper\";\nimport KeyboardArrowDownIcon from \"@material-ui/icons/KeyboardArrowDown\";\nimport KeyboardArrowUpIcon from \"@material-ui/icons/KeyboardArrowUp\";\n\nconst useRowStyles = makeStyles({\n  root: {\n    \"& > *\": {\n      borderBottom: \"unset\"    }\n  }\n});\n\nfunction Row(props) {\n  const { row } = props;\n  const [open, setOpen] = React.useState(false);\n  const [resep,setResep] = useState([]);\n  const classes = useRowStyles();\n  let id = row.id_coklat;\n  // console.log(id);\n  let api = \"http://localhost:3007/api/resep/\" ;\n  // console.log(api);\n  let newapi = api.concat(id);\n  // let params = api.bind(id);\n  useEffect(()=>{\n    Axios.get(newapi).then((response)=>{\n      // console.log(response.data);\n      setResep(response.data);\n    //   rows = response.data;\n    //   console.log(rows);\n    });\n  },[]);\n\n  return (\n    <React.Fragment>\n      <TableRow className={classes.root}>\n        \n        <TableCell >\n          {row.name}\n        </TableCell>\n        <TableCell>{row.stok}</TableCell>\n        <TableCell align=\"right\" >\n          <IconButton\n            aria-label=\"expand row\"\n            size=\"small\"\n            onClick={() => setOpen(!open)}\n          >\n            {open ? <KeyboardArrowUpIcon /> : <KeyboardArrowDownIcon />}\n          </IconButton>\n        </TableCell>\n        {/* <TableCell align=\"right\">{row.fat}</TableCell>\n        <TableCell align=\"right\">{row.carbs}</TableCell>\n        <TableCell align=\"right\">{row.protein}</TableCell> */}\n        <TableCell >\n          {row.nama_coklat}\n        </TableCell>\n        <TableCell>{row.stok}</TableCell>\n      </TableRow>\n      <TableRow>\n        <TableCell style={{ paddingBottom: 0, paddingTop: 0, borderColor:\"black\"}} colSpan={6}>\n          <Collapse in={open} timeout=\"auto\" unmountOnExit>\n            <Box margin={5}>\n              <Typography variant=\"h6\" gutterBottom component=\"div\">\n                Resep\n              </Typography>\n              <Table size=\"small\" aria-label=\"purchases\">\n                <TableHead>\n                  <TableRow>\n                    <TableCell>Bahan</TableCell>\n                    <TableCell>Jumlah</TableCell>\n                    {/* <TableCell align=\"right\">Amount</TableCell>\n                    <TableCell align=\"right\">Total price ($)</TableCell> */}\n                  </TableRow>\n                </TableHead>\n                <TableBody>\n                  {resep.map((historyRow) => (\n                    <TableRow key={historyRow.bahan}>\n                      <TableCell >\n                        {historyRow.nama_bahan}\n                      </TableCell>\n                      <TableCell>{historyRow.jumlah}</TableCell>\n                      {/* <TableCell align=\"right\">{historyRow.amount}</TableCell>\n                      <TableCell align=\"right\">\n                        {Math.round(historyRow.amount * row.price * 100) / 100}\n                      </TableCell> */}\n                    </TableRow>\n                  ))}\n                </TableBody>\n              </Table>\n            </Box>\n          </Collapse>\n        </TableCell>\n      </TableRow>\n    </React.Fragment>\n  );\n}\n\nexport default function CollapsibleTable() {\n  const [coklat,setcoklat] = useState([]);\n  useEffect(()=>{\n    Axios.get(\"http://localhost:3007/api/coklatresep\").then((response)=>{\n      // console.log(response.data);\n      setcoklat(response.data);\n    //   rows = response.data;\n    //   console.log(rows);\n    });\n  },[]);\n\n  return (\n    <div>\n      <h1>Daftar Coklat & Resep</h1>\n      <TableContainer component={Paper} style={{backgroundColor:\"pink\"}}>\n        <Table aria-label=\"collapsible table\">\n          <TableHead>\n            <TableRow>\n              <TableCell style={{borderColor:\"black\"}}>Nama Coklat</TableCell>\n              <TableCell style={{borderColor:\"black\"}}>Jumlah Stok</TableCell>\n              <TableCell style={{borderColor:\"black\"}}/>\n              \n              {/* <TableCell align=\"right\">Fat&nbsp;(g)</TableCell>\n              <TableCell align=\"right\">Carbs&nbsp;(g)</TableCell>\n              <TableCell align=\"right\">Protein&nbsp;(g)</TableCell> */}\n            </TableRow>\n          </TableHead>\n          <TableBody>\n            {coklat.map((row) => (\n              <Row key={row.id_coklat} row={row} />\n            ))}\n          </TableBody>\n        </Table>\n      </TableContainer>\n    </div>\n    \n  );\n}\n"]},"metadata":{},"sourceType":"module"}